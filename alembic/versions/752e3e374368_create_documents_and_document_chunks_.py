"""Create documents and document_chunks tables

Revision ID: 752e3e374368
Revises:
Create Date: 2025-07-30 00:01:25.694289

"""
from collections.abc import Sequence

import sqlalchemy as sa

import app.models.database
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "752e3e374368"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "documents",
        sa.Column("id", app.models.database.UUIDType(length=36), nullable=False),
        sa.Column("source_type", sa.String(length=50), nullable=False),
        sa.Column("source_id", sa.String(length=255), nullable=False),
        sa.Column("title", sa.Text(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("content_hash", sa.String(length=64), nullable=False),
        sa.Column("file_type", sa.String(length=50), nullable=True),
        sa.Column("language", sa.String(length=10), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("processed_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("source_type", "source_id", name="uq_documents_source"),
    )
    op.create_index("idx_documents_hash", "documents", ["content_hash"], unique=False)
    op.create_index(
        "idx_documents_source", "documents", ["source_type", "source_id"], unique=False
    )
    op.create_index("idx_documents_updated", "documents", ["updated_at"], unique=False)
    op.create_table(
        "document_chunks",
        sa.Column("id", app.models.database.UUIDType(length=36), nullable=False),
        sa.Column(
            "document_id", app.models.database.UUIDType(length=36), nullable=False
        ),
        sa.Column("chunk_index", sa.Integer(), nullable=False),
        sa.Column("chunk_type", sa.String(length=20), nullable=False),
        sa.Column("title", sa.Text(), nullable=True),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("content_length", sa.Integer(), nullable=False),
        sa.Column("token_count", sa.Integer(), nullable=True),
        sa.Column("hierarchy_path", sa.Text(), nullable=True),
        sa.Column("chunk_metadata", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["document_id"], ["documents.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "document_id", "chunk_index", name="uq_chunks_document_index"
        ),
    )
    op.create_index(
        "idx_chunks_document", "document_chunks", ["document_id"], unique=False
    )
    # Skip GIN index for JSON column - would need JSONB type for GIN support
    # op.create_index('idx_chunks_metadata', 'document_chunks', ['chunk_metadata'], unique=False, postgresql_using='gin')
    op.create_index("idx_chunks_type", "document_chunks", ["chunk_type"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_chunks_type", table_name="document_chunks")
    # op.drop_index('idx_chunks_metadata', table_name='document_chunks', postgresql_using='gin')
    op.drop_index("idx_chunks_document", table_name="document_chunks")
    op.drop_table("document_chunks")
    op.drop_index("idx_documents_updated", table_name="documents")
    op.drop_index("idx_documents_source", table_name="documents")
    op.drop_index("idx_documents_hash", table_name="documents")
    op.drop_table("documents")
    # ### end Alembic commands ###
